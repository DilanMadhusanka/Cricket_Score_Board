
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author acer
 */
public class ScoreBoard extends javax.swing.JFrame {

    /**
     * Creates new form ScoreBoard
     */
    public ScoreBoard() {
        initComponents();
    }
    
    String id;
    
    public void setId(String id){
        this.id = id;
    }
    
    String overView;
    int sum;
    private int fullScore;
    
    public void setChoice(int sum) {
        this.sum = sum;
    }
    
    public void setOvervewTextField(int fullScore) {
        System.out.println(fullScore);
        this.fullScore = fullScore;
    }
    
    public void choice() {
        
        String choice = (String)jComboBox1.getSelectedItem();
        /*try{
            if(choice == ("OverView")) {
            Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cricketscoreboard", "root", "");
            Statement myStmt = myConn.createStatement();
            String oV = "SELECT * FROM overview_"+id;
            ResultSet myRs = myStmt.executeQuery(oV);
            
            while(myRs.next()) {
                overView = myRs.getString("Overview");
            }
            
            //jTextField1.setText(overView);
            passScore();
        }
        else {
            show_user();
        }
        }catch(Exception e) {
            e.printStackTrace();
        }*/
        
        if(choice == "OverView") {
            //DisplayOverview displayOverview = new DisplayOverview();
            jTextField1.setText(String.valueOf(fullScore));
            //System.out.println(fullScore);
        }
        else {
            show_user();
        }
        
        //jTextField1.setText(overView);
        
    }
    
    public ArrayList<Cricketer> userList() {
        String choice, query;
        ArrayList<Cricketer> cricketerList = new ArrayList<>();
        try {
            Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cricketscoreboard", "root", "");
            Statement myStmt = myConn.createStatement();
            
            choice = (String)jComboBox1.getSelectedItem();
            
            if(choice == "Inning 1") {
                query = "SELECT * FROM tableinning1_"+id;
            }
            
            else{
                query = "SELECT * FROM tableinning2_"+id;
            }
            
            ResultSet myRs = myStmt.executeQuery(query);
            Cricketer cricketer;
            while(myRs.next()) {
                cricketer = new Cricketer(myRs.getString("player"), myRs.getInt("score"), myRs.getInt("played_balls"), myRs.getInt("S.R"));
                cricketerList.add(cricketer);
            }
            
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        return cricketerList;
    }
    
    public void show_user() {
        ArrayList<Cricketer> list = userList();
        DefaultTableModel model = (DefaultTableModel)jTable_Display_Cricketer.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        
        for(int i=0; i<list.size();i++) {
            row[0] = list.get(i).getPlayer();
            row[1] = list.get(i).getScore();
            row[2] = list.get(i).getPlayed_balls();
            row[3] = list.get(i).getSR();
            model.addRow(row);
        }
        
        //ArrayList<Integer> sco = new ArrayList<>();
        /*int num = 0;
        for(int i=0; i<list.size(); i++) {
            num = num + list.get(i).getScore();
        }
        System.out.println(num);*/
        
    }
    
    public void passScore() {
        ArrayList<Cricketer> list = userList();
        DisplayOverview displayOverview = new DisplayOverview();
        displayOverview.setScoreList(list);
        displayOverview.display();
        displayOverview.passFullScore();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_Cricketer = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OverView", "Inning 1", "Inning 2" }));

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTable_Display_Cricketer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Player", "Score", "Played Overs", "S.R"
            }
        ));
        jScrollPane1.setViewportView(jTable_Display_Cricketer);

        jButton1.setText("Show");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(78, 78, 78))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        choice();
        passScore();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScoreBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScoreBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Display_Cricketer;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
